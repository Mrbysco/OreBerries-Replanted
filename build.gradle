plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev' version '7.0.153'
    id 'net.darkhax.curseforgegradle' version '1.1.24'
    id 'com.modrinth.minotaur' version "2.+"
}

version = "${version}"
group = "${mod_group}"
base {
    archivesName = "${mod_archive_name}-${mc_version}"
}

// Mojang ships Java 21 to end users in 1.20.5+, so your mod should target Java 21.
java.toolchain.languageVersion = JavaLanguageVersion.of(21)

//minecraft.accessTransformers.file rootProject.file('src/main/resources/META-INF/accesstransformer.cfg')
//minecraft.accessTransformers.entry public net.minecraft.client.Minecraft textureManager # textureManager

runs {
    // applies to all the run configs below
    configureEach {
        // Recommended logging data for a userdev environment
        systemProperty 'forge.logging.markers', 'REGISTRIES'

        // Recommended logging level for the console
        systemProperty 'forge.logging.console.level', 'debug'

        //Limit ram usage for the dev environment to 4GB
        jvmArgument '-Xmx4G'

        modSource project.sourceSets.main
    }

    client {
        // Comma-separated list of namespaces to load gametests from. Empty = all namespaces.
        systemProperty 'forge.enabledGameTestNamespaces', "${mod_id}"
    }

    server {
        systemProperty 'forge.enabledGameTestNamespaces', "${mod_id}"
        programArgument '--nogui'
    }

    data {
        // example of overriding the workingDirectory set in configureEach above, uncomment if you want to use it
        // workingDirectory project.file('run-data')

        // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
        programArguments.addAll '--mod', "${mod_id}", '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url = "https://maven.blamejared.com"
    }
    maven {
        url = "https://maven.theillusivec4.top/"
    }
    maven {
        url = "https://maven.shedaniel.me/"
    }
}

dependencies {
    implementation "net.neoforged:neoforge:${neo_version}"

    compileOnly "mezz.jei:jei-${mc_version}-common-api:${jei_version}"
    compileOnly "mezz.jei:jei-${mc_version}-neoforge-api:${jei_version}"
    runtimeOnly "mezz.jei:jei-${mc_version}-neoforge:${jei_version}"

    compileOnly "me.shedaniel:RoughlyEnoughItems-api-neoforge:${rei_version}"
    compileOnly "me.shedaniel:RoughlyEnoughItems-default-plugin-neoforge:${rei_version}"
    compileOnly "me.shedaniel:RoughlyEnoughItems-neoforge:${rei_version}"

    compileOnly "me.shedaniel.cloth:cloth-config-neoforge:${cloth_config_version}"
    compileOnly "dev.architectury:architectury-neoforge:${architectury_version}"

//    runtimeOnly "net.darkhax.bookshelf:Bookshelf-Common-1.20.4:${bookshelf_version}"
//    runtimeOnly "net.darkhax.bookshelf:Bookshelf-NeoForge-1.20.4:${bookshelf_version}"
//    runtimeOnly "net.darkhax.botanypots:BotanyPots-Common-1.20.4:${botanypots_version}"
//    runtimeOnly "net.darkhax.botanypots:BotanyPots-NeoForge-1.20.4:${botanypots_version}"
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "${mod_id}",
                "Specification-Vendor"    : "Mrbysco",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "Mrbysco",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

publishing {
    publications {
        register('mavenJava', MavenPublication) {
            groupId project.group
            artifactId base.archivesName.get()
            version project.version
//            from components.java
        }
    }
    repositories {
        if (System.getenv().SAP_SECRET) {
            maven {
                url "https://maven.saps.dev/releases"
                credentials {
                    username = "mrbysco"
                    password = "${System.getenv().SAP_SECRET}"
                }
            }
        }
    }
}

if (System.getenv().CURSEFORGE_KEY) {
    task curseforge(type: net.darkhax.curseforgegradle.TaskPublishCurseForge) {
        apiToken = System.getenv().CURSEFORGE_KEY

        def mainFile = upload(project.curseforge_id, jar)
        mainFile.releaseType = 'beta'
        mainFile.addGameVersion "NeoForge"
        mainFile.addGameVersion "${mc_version}"
        mainFile.addGameVersion "Java 21"
        mainFile.addGameVersion('Server', 'Client')

        mainFile.changelog = file("$project.rootDir/changelog.md")
        mainFile.changelogType = 'markdown'

        mainFile.addOptional(/*"botany-pots", */"roughly-enough-items", "jei")
    }
}

if (System.getenv().MODRINTH_KEY) {
    modrinth {
        token = System.getenv().MODRINTH_KEY
        projectId = project.modrinth_id
        versionType = "beta"
        versionName = "${mod_name} ${mc_version}"
        versionNumber = project.version
        uploadFile = jar
        changelog = file("$project.rootDir/changelog.md").text
        gameVersions = ["${mc_version}"]
        loaders = ["neoforge"]

        dependencies {
//            optional.project "botany-pots"
            optional.project "rei"
            optional.project "jei"
        }
    }
}

// IDEA no longer automatically downloads sources/javadoc jars for dependencies, so we need to explicitly enable the behavior.
idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}